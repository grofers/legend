component: platform_k8s_hpa
data_source_type: Prometheus
metrics_source: https://github.com/kubernetes/kube-state-metrics
reference: https://blog.freshtracks.io/a-deep-dive-into-kubernetes-metrics-part-3-container-resource-metrics-361c5ee46e66
description: Kubernetes Horizantal Pod AutoScaler
panels:
  - title: Current Replica / Min HPA
    type: Graph
    description: Check if Total Number of Pods less than Min Pods
    targets:
      {% for dimension in data %}
      - metric: kube_deployment_status_replicas_available{deployment="{{ dimension.deployment_name }}"} / on (service) group_left(horizontalpodautoscaler) kube_horizontalpodautoscaler_spec_min_replicas{horizontalpodautoscaler="{{ dimension.hpa_name }}"}
        legend: '{{ ' {{deployment}} ' }}'
        ref_no: 1
      {% endfor %}
    alert_config:
      priority: P3
      message: Minimum Number of Pods not satisfied
      rule:
        for_duration: 5m
        evaluate_every: 1m
      condition_query:
        - OR,avg,1,now,1m,lt,1

  - title: HPA Utilization - Maximum
    type: Graph
    description: Check if Total Number of Pods equal to Max Pods for long
    targets:
      {% for dimension in data %}
      - metric: kube_deployment_status_replicas_available{deployment="{{ dimension.deployment_name }}"} / on (service) group_left(horizontalpodautoscaler) kube_horizontalpodautoscaler_spec_max_replicas{horizontalpodautoscaler="{{ dimension.hpa_name }}"}
        legend: '{{ ' {{deployment}} ' }}'
        ref_no: 1
      {% endfor %}
